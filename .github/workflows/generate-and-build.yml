name: Generate and Build

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: 'windows-latest', compiler: 'msvc' }
          - { os: 'windows-latest', compiler: 'clang' }
          - { os: 'macos-15', compiler: 'clang' }
          - { os: 'ubuntu-latest', compiler: 'gcc' }
          - { os: 'ubuntu-latest', compiler: 'clang' }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Generate C++ module binding
        run: python3 generate.py

      - name: Install build dependencies (Windows + Clang)
        if: matrix.os == 'windows-latest' && matrix.compiler == 'clang'
        run: C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -S mingw-w64-clang-x86_64-clang mingw-w64-clang-x86_64-libc++ mingw-w64-clang-x86_64-libwinpthread-git'

      - name: Install build dependencies (macOS)
        if: matrix.os == 'macos-15'
        run: brew install autoconf automake libtool

      - name: Install build dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -y update # https://github.com/actions/runner-images/issues/12599
          sudo apt-get install -y xorg-dev libltdl-dev

      - name: Install build dependencies (Ubuntu + GCC)
        if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'gcc'
        uses: ./.github/actions/build-gcc-15

      - name: Install build dependencies (Ubuntu + Clang)
        if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang'
        run: sudo apt-get install -y libc++-dev libc++abi-dev

      - name: Enable Developer Command Prompt (Windows + MSVC)
        if: matrix.os == 'windows-latest' && matrix.compiler == 'msvc'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Workaround for CMake bug that cannot find __CMAKE::CXX23 target when using homebrew libc++ (macOS)
        if: matrix.os == 'macos-15'
        run: sed -i '' 's|libc++.modules.json|../../c++/libc++.modules.json|g' /opt/homebrew/opt/cmake/share/cmake/Modules/Compiler/Clang-CXX-CXXImportStd.cmake # https://gitlab.kitware.com/cmake/cmake/-/issues/25965#note_1523575

      - name: Configure CMake and Build
        if: matrix.os != 'ubuntu-latest' || matrix.compiler != 'gcc'
        run: |
          mv .github/workflows/scripts/* examples
          cd examples
          cmake --preset=${{ matrix.os }}-${{ matrix.compiler }}
          cmake --build build --target glfw_vulkan --config Release

      - name: Configure CMake and Build (Ubuntu + GCC)
        if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'gcc'
        run: |
          mv .github/workflows/scripts/* examples
          cd examples
          wget https://github.com/Kitware/CMake/releases/download/v4.0.3/cmake-4.0.3-linux-x86_64.tar.gz
          tar -xf cmake-4.0.3-linux-x86_64.tar.gz
          cmake-4.0.3-linux-x86_64/bin/cmake --preset=${{ matrix.os }}-${{ matrix.compiler }}
          cmake-4.0.3-linux-x86_64/bin/cmake --build build --target glfw_vulkan --config Release